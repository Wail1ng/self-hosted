- name: Deploy cloud apps using Docker Compose
  hosts: all
  become: yes

  tasks:
    
    - name: Ensure Git is installed
      apt:
        name: git
        state: present
      when: ansible_os_family == "Debian"
      
    - name: Clone the self-hosted repository using https
      git:
        repo: 'https://github.com/{{git_username}}/self-hosted.git'
        dest: /home/{{ ansible_user }}/git/self-hosted
        update: yes
      become_user: "{{ ansible_user }}"

    - name: Set up and deploy Postgres with Docker Compose
      block:
        - name: Create directories for Postgres
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            recurse: yes            
          loop:
            - "{{ path_to_postgres_config }}"
          when: path_to_postgres_config is defined

        - name: Run Docker Compose to deploy Postgres
          shell: docker compose up -d
          args:
            chdir: /home/{{ ansible_user }}/git/self-hosted/apps/postgres
          environment:
            path_to_postgres_config: "{{ lookup('env', 'path_to_postgres_config') }}"
            postgres_password: "{{ lookup('env', 'postgres_password') }}"
          become_user: "{{ ansible_user }}"

    - name: Set up Open WebUI configuration directory and run Docker Compose
      block:
        - name: Create directories for Open WebUI
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            recurse: yes
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"              
          loop:
            - "{{ path_to_open_webui_config }}"
          when: path_to_open_webui_config is defined

        - name: Run Docker Compose to deploy Open WebUI
          shell: docker compose up -d
          args:
            chdir: /home/{{ ansible_user }}/git/self-hosted/apps/open-webui
          environment:
            path_to_open_webui_config: "{{ lookup('env', 'path_to_open_webui_config') }}"
            openai_api_key: "{{ lookup('env', 'openai_api_key') }}"
          become_user: "{{ ansible_user }}"

    - name: Set up Nextcloud configuration directory and run Docker Compose
      block:
        - name: Create directories for Nextcloud
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            recurse: yes
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"              
          loop:
            - "{{ path_to_nextcloud_config }}"
            - "{{ path_to_nextcloud_data }}"
          when: path_to_nextcloud_config is defined and path_to_nextcloud_data is defined

        - name: Create the Nextcloud database in PostgreSQL
          shell: |
            docker exec -u postgres postgres psql -h localhost -U postgres -c "CREATE DATABASE nextcloud;"
          environment:
            PGPASSWORD: "{{ postgres_password }}"
          when: postgres_password is defined

        - name: Run Docker Compose to deploy Nextcloud
          shell: docker compose up -d
          args:
            chdir: /home/{{ ansible_user }}/git/self-hosted/apps/nextcloud
          environment:
            nextcloud_trusted_domains: "{{ lookup('env', 'nextcloud_trusted_domains') }}"           
            path_to_nextcloud_config: "{{ lookup('env', 'path_to_nextcloud_config') }}"
            path_to_nextcloud_data: "{{ lookup('env', 'path_to_nextcloud_data') }}"
          become_user: "{{ ansible_user }}"

    - name: Set up Only-Office configuration directory and run Docker Compose
      block:
        - name: Create directories for Only-Office
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            recurse: yes 
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"            
          loop:
            - "{{ path_to_only_office }}"
          when: path_to_only_office is defined

        - name: Run Docker Compose to deploy Only-Office
          shell: docker compose up -d
          args:
            chdir: /home/{{ ansible_user }}/git/self-hosted/apps/only-office
          environment:
            path_to_onlyoffice: "{{ lookup('env', 'path_to_only_office') }}"           
          become_user: "{{ ansible_user }}"

    - name: Set up Duplicati configuration directory and run Docker Compose
      block:
        - name: Create directories for Duplicati
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            recurse: yes  
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"            
          loop:
            - "{{ path_to_duplicati_config }}"
          when: path_to_duplicati_config is defined

        - name: Run Docker Compose to deploy Duplicati
          shell: docker compose up -d
          args:
            chdir: /home/{{ ansible_user }}/git/self-hosted/apps/duplicati
          environment:
            path_to_duplicati_config: "{{ lookup('env', 'path_to_duplicati_config') }}" 
            duplicati_encryption_key: "{{ lookup('env', 'duplicati_encryption_key') }}" 
            path_to_media: "{{ lookup('env', 'path_to_media') }}"
            path_to_data: "{{ lookup('env', 'path_to_data') }}"
            path_to_apps: "{{ lookup('env', 'path_to_apps') }}"    
            password: "{{ lookup('env', 'password') }}"  
          become_user: "{{ ansible_user }}"
